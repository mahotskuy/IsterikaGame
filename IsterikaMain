using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Reflection;

namespace ConsoleApplication1
{
    class Players
    {
       public string name { get; protected set; }
      public FunWithWord fw = new FunWithWord();
        public Players()
        { name = "empty constructor"; }

        public Players(string n)
        { name = n; }

      

        public void ShowPlayerName()
        {
            Console.WriteLine(name); 
        }

        public override string ToString()
        {
            string s = "Player " + name+" ";
            return s;
        }

      
       
    }
    
    class CreatePlayers
    {
       
        public List<Players> players = new List<Players>();// { new Players("Jon"), new Players("JOsh"), new Players("Yun"), new Players("Stiv") };
        public void CreatePlayerList()
        {
            byte command = 1;
            byte controlOfPlayers = 0;
            Console.WriteLine("Hello Command {0} Pleas write the name of players.When you will finish pleas write dot and press enter", command);
            string vs;
            while(true)
            {
                if (controlOfPlayers % 2 == 0&&controlOfPlayers!=0)
                {
                    command++;
                    Console.Clear();
                    Console.WriteLine("Hello Command {0} Pleas write the name of players.When you will finish pleas write dot and press enter", command);
                }
                vs = Console.ReadLine();
                if (FunWithWord.IsWordCorrent(vs) && vs.Equals("end", StringComparison.OrdinalIgnoreCase)!=true)
                { 
                    players.Add(new Players(vs));
                controlOfPlayers++;
                }
                if (vs.Equals("end", StringComparison.OrdinalIgnoreCase))
                {
                    if (players.Count % 2 != 0)
                        Console.WriteLine("Quontity of players mast devide by 2");
                   else break;
                }
                
            }
           
    }

        public void FillWordsAnyPlayers()
        {
            Console.Write("Quontity of words =");
            int i=Convert.ToInt32(Console.ReadLine());
            foreach (Players pl in players)
            {
                Console.Clear(); Console.WriteLine("Dear {0}, pleas put down your word, after, press enter end write your nex word. If you finish- write dot",pl.ToString());
                pl.fw.FillWord(i);
            Console.Clear();
            }
        }

        public void ShowPlayers()
        {
            byte b = 0;
            //Console.WriteLine("Command {0}",b);
            foreach (Players playerf in players)
            {
                if(b%2==0)
                    Console.WriteLine("Command {0}", b/2+1);
                playerf.ShowPlayerName();
                b++;
            }
        }

    }

    class WordsTogater
    {
      public List<string> wordTogether = new List<string>();

      public void PlayersTogether(List<Players> lp)
      {
          foreach (Players p in lp)
           WordTogather(p.fw.words); 
      }

       void WordTogather(List<string> s)
        {
            foreach (string word in s)
                wordTogether.Add(word);
        }

    }

    class ShowRandomWord
    {
        Random rw = new Random();
        WordsTogater wtin;
        public ShowRandomWord(WordsTogater wt)
        {  wtin = wt; }
       // List<string> wordTogether = new List<string>() { "a", "b", "c","d","e","f","g"};

        public string RandomWord(List<string> s)
        {
            Console.WriteLine("max value"+s.Count);
            return s[rw.Next(s.Count)]; 
        }

        public System.Timers.Timer t = new System.Timers.Timer(3000);
        public long numberofplayer=0;
        CreatePlayers cpGools;
       
        public void RandomInvoik(CreatePlayers cp)
        {t.Elapsed += ShowRandomWords;
            cpGools = cp;
           while (wtin.wordTogether.Count!=0)
           {
              
               t.Enabled = true;
               
           Console.Clear();
               string st = RandomWord(wtin.wordTogether);
                  
               Console.WriteLine(st);
                 Console.ReadLine();
                 Console.Beep();
               cp.players[(int)numberofplayer].fw.wordsWinsPlayers.Add(st);
                   wtin.wordTogether.Remove(st);
           } Console.WriteLine("Basket Words is emty");
        }

        void ShowRandomWords(Object source, System.Timers.ElapsedEventArgs e)
        {
            t.Enabled = false;
            long l = Math.DivRem(++numberofplayer, cpGools.players.Count(), out numberofplayer);
           Console.Beep(1000, 1500);
            Console.WriteLine("number of wordtogether= {0}",wtin.wordTogether.Count);
            Console.WriteLine("Pleas play player {0}",cpGools.players[(int)numberofplayer].ToString());
          
            Console.ReadLine();
            Console.Clear();
            
        }

        void ShowResult()
        {
            List<int> result = new List<int>();
            foreach (Players p in cpGools.players)
            {Console.WriteLine("Players {0} explain {1} words ",p.ToString(),p.fw.wordsWinsPlayers.Count);
            result.Add(p.fw.wordsWinsPlayers.Count);
            Console.WriteLine("This is a list");
            foreach (string s in p.fw.wordsWinsPlayers)
                Console.WriteLine(s);
            }
            
        }


    }

    class FunWithWord
    {
       public List<string> words = new List<string> ();
       public List<string> wordsWinsPlayers = new List<string>();
        
        public void FillWord(int q)
        {

            for (int i=q; i >0;i-- )
            {
                string word;
                do
                {
                    word = Console.ReadLine();
                } while (!IsWordCorrent(word));  
                words.Add(word);
            }
        }

        public static bool IsWordCorrent(string str)
        {
            for (int i = 0; i < str.Length; i++)
            {
                if (!Char.IsLetter(str[i]))
                {
                    Console.WriteLine("Not correct word");
                return false;
                }
            }
                return true;
        }

      static  public void DisplayAllWord(List<string> ls)
        {
            Type t = ls.GetType();
            Console.WriteLine("list of {0} contein", t.Name);
            foreach (string s in ls)
                Console.WriteLine(s);
        }

      


        static void Main(string[] args)
        {

            CreatePlayers cp = new CreatePlayers();
            cp.CreatePlayerList();
            cp.ShowPlayers();
            cp.FillWordsAnyPlayers();
            WordsTogater wt = new WordsTogater();
            wt.PlayersTogether(cp.players);
            ShowRandomWord srw = new ShowRandomWord(wt);
            srw.RandomInvoik(cp);
            
                Console.ReadLine();
        }
    }
}
